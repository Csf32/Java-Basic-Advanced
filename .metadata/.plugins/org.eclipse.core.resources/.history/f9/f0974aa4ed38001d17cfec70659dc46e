package application2;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;

import entities2.Departament;
import entities2.HoursContract;
import entities2.Worked;
import entities2enum.WorkedLevel;

public class Composicao {

	public static void main(String[] args) throws ParseException {
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);
		//Quase a mesma coisa do DateTimeFormatter, a diferença é que não usa hora
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		
		System.out.print("Enter departament's name");
		String departamentName = sc.nextLine();
		System.out.print("Enter worker data: ");
		System.out.print("Name: ");
		String workerdName = sc.nextLine();
		System.out.print("Level: ");
		String workedLevel = sc.nextLine();
		
		System.out.print("Base salary: ");
		double baseSalary= sc.nextDouble();
		
		//Como o trabalhador depende de um departamento, é preciso instanciar e o deparmentName vai estar associado ao worked
		Worked worked = new Worked(workerdName, WorkedLevel.valueOf(workedLevel), baseSalary, new Departament(departamentName));
		
		System.out.print("How many contracts to this worker?");
		int manyContracts = sc.nextInt();
		
		for(int i =1; i<=manyContracts; i++) {
			System.out.println("Enter contract #" + i + " data: ");
			System.out.println("Date (DD/MM/YYYY");
			Date contractDate = sdf.parse(sc.next());
			System.out.print("Value per hour:");
			double valuePerHour = sc.nextDouble();
			System.out.println("Duration (hours): ");
			
			int hours = sc.nextInt();
			HoursContract contract = new HoursContract(contractDate, valuePerHour, hours);
			//Associar os contratos com o trabalhador
			worked.addContract(contract);
		
		}
		
		
		
		
		
		
		
		
		sc.close();
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
